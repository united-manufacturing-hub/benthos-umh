---
name: main

on:
  push:
    branches:
      - '**'

jobs:
  go-test:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: ./.github/actions/setup-go
      - name: Test
        run: make test
  go-lint:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: ./.github/actions/setup-go
      - name: Lint
        run: |
          gofmt -l .
          test -z "$(gofmt -l .)"
  go-build:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: ./.github/actions/setup-go
      - name: Build
        run: make
      - name: Upload benthos artifact
        uses: actions/upload-artifact@v2
        with:
          name: benthos
          path: tmp/bin/benthos
          retention-days: 2
      - name: Upload benthos-lambda artifact
        uses: actions/upload-artifact@v2
        with:
          name: benthos-lambda.zip
          path: tmp/benthos-lambda.zip
          retention-days: 2
  test:
    needs: go-build
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
      - name: Download Benthos artifact
        uses: actions/download-artifact@v2
        with:
          name: benthos
          path: tmp/bin
      - name: Download Benthos Lambda artifact
        uses: actions/download-artifact@v2
        with:
          name: benthos-lambda.zip
          path: tmp
      - name: Install Benthos to PATH
        run: |
          chmod 755 tmp/bin/benthos
          echo "$(pwd)/tmp/bin" >> $GITHUB_PATH
      - name: Build
        run: npm run build
      - name: Test
        run: npm test
  lint:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
      - name: Lint
        run: npm run lint
  build:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Docker
        uses: ./.github/actions/setup-docker
        with:
          registry_domain: ghcr.io
          registry_username: ${{ secrets.GH_USER }}
          registry_password: ${{ secrets.GH_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: 'type=local,src=/tmp/.buildx-cache'
          cache-to: 'type=local,dest=/tmp/.buildx-cache'
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}
      - name: Remove CI container image
        uses: bots-house/ghcr-delete-image-action@v1.0.1
        if: always()
        with:
          owner: ${{ github.repository_owner }}
          name: ${{ github.event.repository.name }}
          tag: ${{ github.sha }}
          token: ${{ secrets.GH_TOKEN }}
  package:
    runs-on: ubuntu-20.04
    timeout-minutes: 30
    needs: go-build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
      - name: Download Benthos Lambda artifact
        uses: actions/download-artifact@v2
        with:
          name: benthos-lambda.zip
          path: tmp
      - name: Build
        run: npm run build
      - name: Serverless package
        run: npm run sls:package
