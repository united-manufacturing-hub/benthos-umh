---
name: main

on:
  push:
    branches:
      - '**'

jobs:
  go-test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Test
        run: make test
  go-lint:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - name: Lint
        run: |
          gofmt -l .
          test -z "$(gofmt -l .)"
  go-build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'
      - uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build
        run: make
      - name: Upload benthos artifact
        uses: actions/upload-artifact@v2
        with:
          name: benthos
          path: tmp/bin/benthos
          retention-days: 2
      - name: Upload benthos-lambda artifact
        uses: actions/upload-artifact@v2
        with:
          name: benthos-lambda.zip
          path: tmp/benthos-lambda.zip
          retention-days: 2
  test:
    needs: go-build
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Cache npm packages
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Download Benthos artifact
        uses: actions/download-artifact@v2
        with:
          name: benthos
          path: tmp/bin
      - name: Download Benthos Lambda artifact
        uses: actions/download-artifact@v2
        with:
          name: benthos-lambda.zip
          path: tmp
      - name: Install Benthos to PATH
        run: |
          chmod 755 tmp/bin/benthos
          echo "$(pwd)/tmp/bin" >> $GITHUB_PATH
      - name: Build
        run: npm run build
      - name: Test
        run: npm test
  lint:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Cache npm packages
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Lint
        run: npm run lint
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Setup cache
        uses: actions/cache@v2
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USER }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v2
        with:
          push: true
          cache-from: 'type=local,src=/tmp/.buildx-cache'
          cache-to: 'type=local,dest=/tmp/.buildx-cache'
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}
      - name: Remove CI container image
        uses: bots-house/ghcr-delete-image-action@v1.0.0
        if: always()
        with:
          owner: ${{ github.repository_owner }}
          name: ${{ github.event.repository.name }}
          tag: ${{ github.sha }}
          token: ${{ secrets.GH_TOKEN }}
  package:
    runs-on: ubuntu-20.04
    needs: go-build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Cache npm packages
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Download Benthos Lambda artifact
        uses: actions/download-artifact@v2
        with:
          name: benthos-lambda.zip
          path: tmp
      - name: Build
        run: npm run build
      - name: Serverless package
        run: npm run sls:package
