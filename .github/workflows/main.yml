---
name: main

on:
  push:
    branches:
      - '**'
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  go-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: ./.github/actions/setup-go
      - name: Test
        run: make test
  go-lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: ./.github/actions/setup-go
      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.49
          args: --timeout 30m
  go-build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Go
        uses: ./.github/actions/setup-go
      - name: Build
        uses: goreleaser/goreleaser-action@v3
        with:
          args: release --skip-publish --skip-sign --snapshot --timeout=60m
      - name: Read metadata
        id: metadata
        uses: juliangruber/read-file-action@v1
        with:
          path: target/dist/metadata.json
      - name: Prepare artifacts
        run: |
          mkdir -p tmp/bin
          cp target/dist/benthos_linux_amd64_v1/benthos tmp/bin/benthos
        env:
          VERSION: ${{ fromJSON(steps.metadata.outputs.content).version }}
      - name: Upload Benthos artifacts
        uses: actions/upload-artifact@v3
        with:
          name: benthos
          path: tmp/bin/benthos
          retention-days: 2
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: ./.github/actions/setup-node
      - name: Lint
        run: npm run lint
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Docker
        uses: ./.github/actions/setup-docker
        with:
          registry_domain: ${{ env.REGISTRY }}
          registry_username: ${{ github.actor }}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: 'type=local,src=/tmp/.buildx-cache'
          cache-to: 'type=local,dest=/tmp/.buildx-cache'
          tags: ghcr.io/${{ github.repository }}:${{ github.sha }}
      - name: Remove CI container image
        uses: bots-house/ghcr-delete-image-action@v1.0.1
        if: always()
        with:
          owner: ${{ github.repository_owner }}
          name: ${{ github.event.repository.name }}
          tag: ${{ github.sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
