# Simplified Sparkplug B to UNS Integration
# This configuration demonstrates the enhanced Sparkplug B processor
# with automatic metric splitting, filtering, and metadata extraction

input:
  mqtt:
    urls: ["tcp://localhost:1883"]
    topics: 
      - "spBv1.0/+/+/+"     # Node-level topics
      - "spBv1.0/+/+/+/+"   # Device-level topics
    client_id: benthos-sparkplug-to-uns
    qos: 1

pipeline:
  processors:
    # Step 1: Decode Sparkplug B protobuf payloads with auto-features enabled
    - sparkplug_b_decode:
        # Auto-split metrics: Each metric becomes a separate message (default: true)
        auto_split_metrics: true
        
        # Only process DATA messages, drop others (default: true)  
        data_messages_only: true
        
        # Auto-extract values and set simple payload structure (default: true)
        auto_extract_values: true
        
        # Advanced options (all defaults)
        drop_birth_messages: false        # Still cache aliases but drop BIRTH messages
        strict_topic_validation: false    # Pass through invalid topics
        cache_ttl: ""                     # No alias cache expiration

    # Step 2: Transform to UMH format using tag_processor (much simpler now!)
    - tag_processor:
        defaults: |
          # tag_name is already set by sparkplug_b_decode processor
          # device_id, group_id, edge_node_id are already set as metadata
          
          msg.meta.data_contract = "_historian";
          
          # Use device hierarchy from Sparkplug topic structure
          msg.meta.location_path = msg.meta.group_id + "." + msg.meta.edge_node_id;
          if msg.meta.device_id != "" {
            msg.meta.location_path = msg.meta.location_path + "." + msg.meta.device_id;
          }
          
          # Set default virtual path - can be customized based on tag patterns
          msg.meta.virtual_path = "sensors.generic";
          
          return msg;
        
        conditions:
          # Categorize metrics by name patterns using virtual paths
          - if: msg.meta.tag_name && msg.meta.tag_name.includes("temp")
            then: |
              msg.meta.virtual_path = "sensors.temperature";
              return msg;
          
          - if: msg.meta.tag_name && msg.meta.tag_name.includes("press")
            then: |
              msg.meta.virtual_path = "sensors.pressure";
              return msg;
          
          - if: msg.meta.tag_name && (msg.meta.tag_name.includes("speed") || msg.meta.tag_name.includes("rpm"))
            then: |
              msg.meta.virtual_path = "actuators.motor";
              return msg;
          
          - if: msg.meta.tag_name && msg.meta.tag_name.includes("vibr")
            then: |
              msg.meta.virtual_path = "sensors.vibration";
              return msg;

output:
  uns: {} 