# Sparkplug B Edge Node Test Configuration
# This configuration creates a simple Edge Node that publishes test data
# to demonstrate the complete Sparkplug B flow with the Primary Host

input:
  # Generate test data every 5 seconds
  generate:
    interval: "1s"
    mapping: |
      root = {
        "counter": counter()
      }

pipeline:
  processors:
    # Convert to UMH-core format using tag_processor
    - tag_processor:
        defaults: |
          // Set UMH asset hierarchy
          msg.meta.location_path = "enterprise.factory.line1.station1";
          msg.meta.data_contract = "_historian";
          
          // Store the counter value before modifying payload
          let counterValue = msg.payload.counter;
          
          // Determine tag name based on counter value
          if (counterValue % 2 == 0) {
            msg.meta.tag_name = "value";
            msg.meta.virtual_path = "temperature";
            // Simulate temperature data
            msg.payload = 25.0 + (counterValue % 10);
          } else {
            msg.meta.tag_name = "value";
            msg.meta.virtual_path = "humidity";
            // Simulate humidity data
            msg.payload = 60.0 + (counterValue % 20);
          }
          
          return msg;

output:
  broker:
    outputs:
      - stdout: {}
      - sparkplug_b:
          # MQTT connection to same broker as Primary Host
          mqtt:
            urls: ["tcp://broker.hivemq.com:1883"]
            client_id: "benthos-test-edge-node"
            qos: 1
            keep_alive: "60s"
            connect_timeout: "30s"
            clean_session: true
          
          # Edge Node identity
          identity:
            group_id: "TestGroup"
            edge_node_id: "TestEdgeNode"
          
          # Configure as Edge Node (publishes data)
          role: "edge_node"

# Optional: Log to see what's being published
logger:
  level: "DEBUG"
  format: "json" 