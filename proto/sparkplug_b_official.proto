/**
 * Copyright (c) 2015, 2018 Cirrus Link Solutions and others
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *   Cirrus Link Solutions - initial implementation
 */

syntax = "proto2";

package org.eclipse.tahu.protobuf;
option java_package = "org.eclipse.tahu.protobuf";
option java_outer_classname = "SparkplugBProto";
option go_package = "github.com/united-manufacturing-hub/benthos-umh/sparkplug_plugin/sparkplugb";

message Payload {
  optional uint64 timestamp = 1;
  repeated Metric metrics = 2;
  optional uint64 seq = 3;
  optional string uuid = 4;
  optional bytes body = 5;

  message Metric {
    optional string name = 1;
    optional uint64 alias = 2;
    optional uint64 timestamp = 3;
    optional uint32 datatype = 4;
    optional bool is_historical = 5;
    optional bool is_transient = 6;
    optional bool is_null = 7;
    optional MetaData metadata = 8;
    optional PropertySet properties = 9;

    oneof value {
      uint32 int_value = 10;
      uint64 long_value = 11;
      float float_value = 12;
      double double_value = 13;
      bool boolean_value = 14;
      string string_value = 15;
      bytes bytes_value = 16;
      DataSet dataset_value = 17;
      Template template_value = 18;
      MetricValueExtension extension_value = 19;
    }
  }

  message MetaData {
    optional bool is_multi_part = 1;
    optional string content_type = 2;
    optional uint64 size = 3;
    optional uint64 seq = 4;
    optional string file_name = 5;
    optional string file_type = 6;
    optional string md5 = 7;
    optional string description = 8;
    extensions 9 to max;
  }

  message PropertySet {
    repeated string keys = 1;
    repeated PropertyValue values = 2;
  }

  message PropertyValue {
    optional uint32 type = 1;
    optional bool is_null = 2;
    oneof value {
      uint32 int_value = 3;
      uint64 long_value = 4;
      float float_value = 5;
      double double_value = 6;
      bool boolean_value = 7;
      string string_value = 8;
      PropertySet propertyset_value = 9;
      PropertySetList propertysets_value = 10;
      MetricValueExtension extension_value = 11;
    }
  }

  message PropertySetList {
    repeated PropertySet propertyset = 1;
  }

  message DataSet {
    optional uint64 num_of_columns = 1;
    repeated string columns = 2;
    repeated uint32 types = 3;
    repeated Row rows = 4;

    message Row {
      repeated DataSetValue elements = 1;
    }
  }

  message DataSetValue {
    oneof value {
      uint32 int_value = 1;
      uint64 long_value = 2;
      float float_value = 3;
      double double_value = 4;
      bool boolean_value = 5;
      string string_value = 6;
      MetricValueExtension extension_value = 7;
    }
  }

  message Template {
    optional string version = 1;
    repeated Metric metrics = 2;
    repeated Parameter parameters = 3;
    optional string template_ref = 4;
    optional bool is_definition = 5;

    message Parameter {
      optional string name = 1;
      optional uint32 type = 2;
      oneof value {
        uint32 int_value = 3;
        uint64 long_value = 4;
        float float_value = 5;
        double double_value = 6;
        bool boolean_value = 7;
        string string_value = 8;
        MetricValueExtension extension_value = 9;
      }
    }
  }

  message MetricValueExtension {
    extensions 1 to max;
  }
}